import smtplib


def check_smtp_vulnerability(ip_address):
    vulnerabilities = []
    try:
        with smtplib.SMTP(ip_address) as smtp:
            # Check SMTP banner for specific version information
            banner = smtp.docmd("NOOP")[1]
            vulnerabilities += check_smtp_banner(banner)

            # Check for STARTTLS support (secure connections)
            if 'STARTTLS' in smtp.esmtp_features:
                vulnerabilities.append(
                    "SMTP server supports STARTTLS (secure connection)")

            # Test for open relay vulnerability
            vulnerabilities += test_open_relay(smtp)

            # Additional checks can be added here
    except Exception as e:
        return [f"Error checking SMTP vulnerability: {str(e)}"]

    return vulnerabilities if vulnerabilities else [
        "No known SMTP vulnerabilities detected"]


def check_smtp_banner(banner):
    findings = []
    # Example check for known vulnerable SMTP versions
    if 'Exim 4.92' in banner:
        findings.append("Exim 4.92 detected - Check for known vulnerabilities")
    # Additional checks based on banner content can be added here
    return findings


def test_open_relay(smtp):
    findings = []
    try:
        status, _ = smtp.docmd("MAIL FROM:<john@cena.com>")
        if "250" in status:
            status, _ = smtp.docmd("RCPT TO:<recipient@example.com>")
            if "250" in status:
                findings.append("Potential open relay detected")
    except Exception as e:
        findings.append(f"Error during open relay test: {str(e)}")
    return findings

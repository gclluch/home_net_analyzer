import ftplib


def check_ftp_vulnerability(ip_address):
    vulnerabilities = []
    try:
        ftp = ftplib.FTP(ip_address)
        ftp.login()  # Attempting anonymous login
        vulnerabilities.append("Anonymous FTP login is allowed")

        # Check for writable directories
        vulnerabilities += check_ftp_writable_directories(ftp)

        # Check FTP banner for known vulnerabilities
        banner = ftp.getwelcome()
        vulnerabilities += check_ftp_banner(banner)

    except ftplib.error_perm:
        # Handle error if anonymous login is not allowed
        pass
    except Exception as e:
        return [f"Error checking FTP vulnerability: {str(e)}"]

    return vulnerabilities if vulnerabilities else [
        "No known FTP vulnerabilities detected"]


def check_ftp_writable_directories(ftp):
    findings = []
    try:
        # Attempt to change to a writable directory
        writable_dirs = ['/', '/var/ftp', '/pub', '/upload']
        for dir in writable_dirs:
            try:
                ftp.cwd(dir)
                # Attempt to create a file
                ftp.mkd('test_dir')
                ftp.rmd('test_dir')  # Clean up
                findings.append(f"Writable FTP directory: {dir}")
                break
            except BaseException:
                continue
    except Exception as e:
        findings.append(f"Error checking writable directories: {str(e)}")
    return findings


def check_ftp_banner(banner):
    findings = []
    # Add logic to check banner against known vulnerable FTP versions
    # Example:
    if 'vsFTPd 2.3.4' in banner:
        findings.append(
            "vsFTPd 2.3.4 - Potentially vulnerable to backdoor exploit")
    # Add more checks for different versions
    return findings
